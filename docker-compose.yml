version: "3.9"
services:
  extract_data:
    build:
      context: .
      dockerfile: extract_data/Dockerfile
    ports:
      - "8000:8000"
    networks:
      - app-network

  clean_and_split:
    build: ./cleanAndSplitData
    ports:
      - "8001:8001"
    networks:
      - app-network

  trainer:
    build:
      context: .
      dockerfile: trainer/Dockerfile
    volumes:
        - json_data:/app/output/json
#    depends_on:
#      - db
#    environment:
#      - DB_HOST=db
#      - DB_USER=root
#      - DB_PASSWORD=example
#      - DB_NAME=ml_data
    ports:
      - "8002:8002"
    networks:
      - app-network

  predictor:
    build: ./predictor
    volumes:

      - json_data:/app/output/json
#    depends_on:
#      - db
#    environment:
#      - DB_HOST=db
#      - DB_USER=root
#      - DB_PASSWORD=example
#      - DB_NAME=ml_data
    ports:
      - "8003:8003"
    networks:
      - app-network

#  db:
#    image: mysql:8
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: example
#      MYSQL_DATABASE: ml_data
#    ports:
#      - "3306:3306"
#    volumes:
#      - db_data:/var/lib/mysql
#    networks:
#      - app-network
#
#  phpmyadmin:
#    image: phpmyadmin/phpmyadmin
#    restart: always
#    ports:
#      - "8081:80"
#    environment:
#      PMA_HOST: db
#      MYSQL_ROOT_PASSWORD: example
#    depends_on:
#      - db
#    networks:
#      - app-network

volumes:

  json_data: {}

networks:
  app-network:
